services:
  postgres:
    image: postgres:17.5
    container_name: shortina-postgres
    environment:
      POSTGRES_DB: shortina
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shortina-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7
    container_name: shortina-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - shortina-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Go Web Server
  # TODO: securely store env variables for deployemnt
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shortina-app
    environment:
      - ENVIRONMENT=local
      - SERVICE_REGION=ap-southeast-1
      - DB_RUN_MIGRATION=true
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_NAME=shortina
      - DB_SSL_MODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DB_MIGRATION_PATH=storage/postgres/migrations
      - ENABLE_LOADING_SECRET=false
      - TOKEN_SECRET_KEY=some-token-secret-key
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - shortina-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  shortina-network:
    driver: bridge